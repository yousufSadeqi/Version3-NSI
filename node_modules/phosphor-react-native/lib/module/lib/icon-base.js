"use strict";

import { useContext } from 'react';
import Svg from 'react-native-svg';
import { IconContext } from '../lib';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
function IconBase({
  weight,
  color,
  size,
  style,
  mirrored,
  duotoneColor,
  duotoneOpacity,
  title,
  titleId,
  name,
  weights,
  ...props
}) {
  const {
    color: contextColor = '#000',
    size: contextSize = 24,
    weight: contextWeight = 'regular',
    mirrored: contextMirrored = false,
    style: contextStyle,
    duotoneColor: contextDuotoneColor,
    duotoneOpacity: contextDuotoneOpacity = 0.2
  } = useContext(IconContext);
  return /*#__PURE__*/_jsxs(Svg, {
    style: [contextStyle, style, {
      ...((mirrored ?? contextMirrored) && {
        transform: [{
          scaleX: -1
        }]
      })
    }],
    className: `${name}-${weight}__svg-icon-phosphor`,
    testID: props.testID ?? `phosphor-react-native-${name}-${weight}`,
    fill: "currentColor",
    viewBox: "0 0 256 256",
    width: size ?? contextSize,
    height: size ?? contextSize,
    color: color ?? contextColor,
    "aria-labelledby": titleId,
    ...props,
    children: [title ? /*#__PURE__*/_jsx("title", {
      id: titleId,
      children: title
    }) : null, (weight ?? contextWeight) === 'duotone' ?
    // @ts-expect-error not callable
    weights.get(weight ?? contextWeight)({
      duotoneColor: duotoneColor ?? contextDuotoneColor ?? color,
      duotoneOpacity: duotoneOpacity ?? contextDuotoneOpacity
    }) : weights.get(weight ?? contextWeight)]
  });
}
export default IconBase;
//# sourceMappingURL=icon-base.js.map